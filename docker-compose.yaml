version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - .github/.build/docker/rabbitmq/data/:/var/lib/rabbitmq/
        - .github/.build/docker/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - scraperoo-net

  redis:
    image: redis/redis-stack:latest
    container_name: 'redis'
    ports:
      - 8001:8001
      - 8070:8070
      - 6379:6379
    volumes:
      - .github/.build/docker/redis/data/:/data
    networks:
        - scraperoo-net

  minio:
    image: quay.io/minio/minio:latest
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - .github/.build/docker/minio/data/:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_PROMETHEUS_AUTH_TYPE: public
    networks:
        - scraperoo-net

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: meilisearch
    ports:
      - 7700:7700
    volumes:
      - .github/.build/docker/meilisearch/meili_data:/meili_data
    environment:
      - MEILI_ENV=development
      - MEILI_LOG_LEVEL
      - MEILI_MASTER_KEY='MASTER_KEY'
    networks:
        - scraperoo-net

  scylla:
    image: scylladb/scylla
    container_name: scylla
    ports:
      - 9042:9042
      - 9180:9180
    volumes:
      - .github/.build/docker/scylla:/var/lib/scylla
    command: --smp 1 --developer-mode 1
    networks:
        - scraperoo-net

  prometheus:
    image: 'prom/prometheus'
    ports:
        - "9090:9090"
    volumes:
        - .github/.build/docker/prometheus_config/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
  grafana:
    image: 'grafana/grafana-oss'
    ports:
        - "9091:3000"
    volumes:
        - .github/.build/docker/grafana_config/grafana.ini:/etc/grafana/grafana.ini:ro
        - .github/.build/docker/grafana_config/datasources:/etc/grafana/provisioning/datasources:ro
        - .github/.build/docker/grafana_config/dashboards:/var/lib/grafana/dashboards
        - .github/.build/docker/grafana_config/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
    environment:
        - GF_SECURITY_ADMIN_PASSWORD=grafana
        - GF_SECURITY_ADMIN_USER=grafana
        - GF_INSTALL_PLUGINS=grafana-clock-panel, grafana-simple-json-datasource
    depends_on:
        - prometheus
    networks:
        - scraperoo-net

networks:
  scraperoo-net:
    driver: bridge
